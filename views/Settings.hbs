<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Admin Settings - Apple Product Admin Panel</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <style>
        body {
            background-color: #121212;
            font-family: 'Arial', sans-serif;
            color: #f1f1f1;
        }

        .alert {
            padding: 10px 15px;
            margin-bottom: 20px;
            border-radius: 5px;
            font-size: 14px;
            text-align: center;
        }

        .alert-success {
            background-color: #28a745;
            color: #fff;
        }

        .alert-danger {
            background-color: #dc3545;
            color: #fff;
        }

        .main-container {
            max-width: 1000px;
            margin: 30px auto;
            background: #1e1e1e;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.5);
        }

        h2 {
            color: #f1f1f1;
        }

        .profile-section {
            display: flex;
            align-items: center;
            margin-bottom: 30px;
        }

        .profile-image {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid #007bff;
        }

        .profile-details {
            margin-left: 20px;
        }

        .form-section-title {
            font-size: 18px;
            font-weight: bold;
            color: #f1f1f1;
            margin-bottom: 10px;
        }

        .form-control {
            background: #2c2c2c;
            color: #f1f1f1;
            border: none;
            padding: 10px;
            border-radius: 5px;
            width: 30rem;
            margin-left: 3rem;
        }

        .form-control:focus {
            box-shadow: none;
            outline: none;
            background: #3c3c3c;
        }

        .form-group {
            display: flex;
            margin-left: 6rem;
            align-items: center;
        }

        .edit-button {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 5px 15px;
            font-size: 14px;
            border-radius: 5px;
            cursor: pointer;
            margin-left: 2rem;
        }

        .edit-button:hover {
            background-color: #0056b3;
        }

        .banner-section {
            position: relative;
            margin-bottom: 30px;
        }

        .banner-image {
            width: 100%;
            height: 250px;
            object-fit: cover;
            border-radius: 10px;
            border: 3px solid #007bff;
        }

        .banner-edit-button {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: #007bff;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .save-button {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 5px;

        }

        .save-button:hover {
            background-color: #0056b3;
        }

        .hidden-input {
            display: none;
        }

        /* Static Content Section */
        .static-content {
            background: #1a1a1a;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
        }

        .static-content h4 {
            color: #f1f1f1;
            font-weight: bold;
            text-align: center;
            margin-bottom: 15px;
        }

        .static-content p {
            font-size: 14px;
            color: #b3b3b3;
            text-align: center;
        }

        .static-content .quote {
            font-size: 16px;
            font-style: italic;
            color: #007bff;
            margin-top: 10px;
            text-align: center;
        }

        .create-admin-btn {
            margin-top: 10px;
            background-color: #28a745;
            color: #fff;
            border: none;
            padding: 10px 15px;
            font-size: 14px;
            border-radius: 5px;
            cursor: pointer;
            width: 120px;
            text-align: center;
        }

        .create-admin-btn:hover {
            background-color: #218838;
        }

        .admin-table {
            width: 100%;
            overflow-x: auto;
            max-height: 300px;
            display: block;
            margin-top: 30px;
        }

        .admin-table table {
            width: 100%;
            border-collapse: collapse;
        }

        .admin-table th,
        .admin-table td {
            padding: 10px;
            text-align: left;
            border: 1px solid #ccc;
        }

        .admin-table img {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 5px;
        }

        .delete-button {
            background-color: slategray;
            color: #fff;
            border: none;
            padding: 5px 10px;
            font-size: 14px;
            border-radius: 5px;
            cursor: pointer;

        }

        .delete-button:hover {
            background-color: red;
        }

        .main-button {
            background-color: #28a745;
            color: #fff;
            border: none;
            padding: 5px 10px;
            font-size: 14px;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 5px;
        }

        .main-button:hover {
            background-color: green;
        }
    </style>
</head>

<body>

    <div class="main-container">
        <h2 class="text-center">Admin Settings</h2>
        <hr>

        <!-- Profile Section -->
        <div class="profile-section">
            <!-- Left Side Profile Image and Details -->
            <div style="display: flex; align-items: center; flex: 1;">
                <img src="{{profileImage}}" alt="Profile Image" class="profile-image" style="margin-left: 3rem;">
                <div class="profile-details" style="margin-left: 3rem;">
                    <h5>{{adminData.username}}</h5>
                    <p class="text-muted">Role: {{adminData.role}}</p>
                    <p class="text-muted">Joined: {{adminData.dateJoined}}</p>
                    <p class="text-muted">
                        Last Login:
                        {{adminData.lastLogin}}
                    </p>
                </div>
            </div>

            <!-- Right Side Button (Visible only to Super Admin) -->
            {{#if (eq adminData.role "Super Admin")}}
            <div style="display: flex; align-items: center; justify-content: flex-end; flex: 1;">
                <a href="/auth/get-create-new-admin">
                    <button class="create-admin-btn">Create New Admin</button>
                </a>
            </div>
            {{/if}}
        </div>

        <hr>

        <!-- Admin Form -->
        <form action="/update-profile" method="PUT" id="updateProfileForm">
            <div class="form-section-title">Edit Profile</div>
            <div id="messageContainer" style="text-align: center;"></div>

            <!-- Username -->
            <div class="form-group">
                <label for="username">Username : </label>
                <input type="text" class="form-control" id="username" name="username" value="{{adminData.username}}"
                    required>
                <button type="button" class="edit-button" onclick="toggleEdit('username')">Edit</button>
            </div>

            <!-- Email -->
            <div class="form-group">
                <label for="email">Email : </label>
                <input type="email" style="margin-left: 5rem;" class="form-control" id="email" name="email"
                    value="{{adminData.email}}" required>
                <button type="button" class="edit-button" onclick="toggleEdit('email')">Edit</button>
            </div>

            <!-- Password -->
            <div class="form-group">
                <label for="password">Password : </label>
                <input type="password" class="form-control" id="password" name="password"
                    placeholder="Enter new password">
                <button type="button" class="edit-button" onclick="toggleEdit('password')">Edit</button>
            </div>
            <div style="display: flex;margin-left: 4rem;">
                {{#if adminData.firstPageBannerImageURL}}
                <img src="{{adminData.firstPageBannerImageURL}}" alt="Banner Image" class="banner-image"
                    style="width: 130px;height: 100px;">
                {{else}}
                <p>No banner image set.</p>
                {{/if}}
                <div class="">
                    <label for="bannerImage" style="margin-left: 2rem;">Banner Image URL: </label>
                    <input type="text" class="form-control" id="bannerImage" name="bannerImage"
                        value="{{adminData.bannerImage}}">
                    <button type="button" style="margin-top: 1rem;" class="edit-button"
                        onclick="toggleEdit('bannerImage')">Edit</button>
                </div>
            </div>

            <!-- Save Button -->
            <div class="form-group" style="justify-content: flex-end; padding-top: 20px;">
                <button type="submit" class="save-button">Save Changes</button>
            </div>
        </form>

        <hr>
        <!-- Static Content Section -->
        <div class="static-content">
            <h4>Our Vision</h4>
            <p>At AppleStore Admin, we strive to deliver an unparalleled user experience, ensuring that every Apple
                product is managed and sold with precision and care.</p>
            <p class="quote">"Innovation is at the heart of everything we do."</p>
            <p>Our admin panel empowers you to efficiently manage your Apple store, providing insights, customer
                management, and a seamless journey.</p>
        </div>
        <hr>
        {{#if (eq adminData.role "Super Admin")}}
        <h3 class="text-center">All Admins</h3>
        <div class="admin-table">
            <table>
                <thead>
                    <tr>
                        <th>Profile Image</th>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Banner Image</th>
                        <th>Joined</th>
                        <th>Last Login</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each allAdmins}}
                    <tr>
                        <td><img src="{{this.profileImage}}" alt="Profile Image"></td>
                        <td>{{this.username}}</td>
                        <td>{{this.email}}</td>
                        <td>{{this.role}}</td>
                        <td>
                            {{#if this.firstPageBannerImageURL}}
                            <img src="{{this.firstPageBannerImageURL}}" alt="Banner Image" style="width: 100px;">
                            {{else}}
                            No Banner
                            {{/if}}
                        </td>
                        <td>{{this.dateJoined}}</td>
                        <td>{{this.lastLogin}}</td>
                        <td>
                            <button class="delete-button" onclick="deleteAdmin('{{this._id}}')">Delete</button>
                            <button class="main-button" onclick="setMain('{{this._id}}')">
                                {{#if this.mainStatus}} Unset Main {{else}} Set Main {{/if}}
                            </button>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
        {{/if}}

        <hr>
        <div class="admin-table">
            <h3 class="text-center">All Coupons</h3>
            <table>
                <thead>
                    <tr>
                        <th>Coupon Code</th>
                        <th>Created At</th>
                        <th>Expires At</th>
                        <th>Discount (%)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="couponsTableBody">
                    {{#if coupons}}
                    {{#each coupons}}
                    <tr id="coupon-row-{{this._id}}">
                        <td>{{this.code}}</td>
                        <td>{{this.createdAt}}</td>
                        <td>{{this.validUntil}}</td>
                        <td>{{this.discountPercentage}}%</td>
                        <td>
                            <button class="delete-button" onclick="deleteCoupon('{{this._id}}')">Delete</button>
                        </td>
                    </tr>
                    {{/each}}
                    {{else}}
                    <p>No coupons available.</p>
                    {{/if}}
                </tbody>
            </table>

        </div>

        <hr>
        <h4 class="text-center">Create New Coupon</h4>
        <form id="createCouponForm">
            <div class="form-group">
                <label for="couponCode">Coupon Code: </label>
                <input type="text" id="couponCode" name="code" class="form-control" placeholder="Enter coupon code"
                    required>
            </div>

            <div class="form-group">
                <label for="validUntil">Valid Until: </label>
                <input type="date" id="validUntil" name="validUntil" class="form-control" required>
            </div>
            <div class="form-group">
                <label for="discountPercentage">Discount Percentage:</label>
                <input type="number" id="discountPercentage" name="discountPercentage" class="form-control" min="1"
                    max="100" placeholder="Enter discount percentage" required>
            </div>
            <div class="form-group text-center">
                <button type="submit" class="save-button">Create Coupon</button>
            </div>
        </form>
        <hr>
    </div>


    <script>
        function displayMessage(message, type) {
            const messageContainer = document.getElementById('messageContainer');
            messageContainer.innerHTML = ''; // Clear any previous messages
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type === 'success' ? 'success' : 'danger'}`;
            alertDiv.innerText = message;
            messageContainer.appendChild(alertDiv);

            // Automatically hide the message after 3 seconds
            setTimeout(() => {
                messageContainer.innerHTML = '';
            }, 3000);
        }
    </script>

    <script>
        function toggleEdit(field) {
            document.getElementById(field).disabled = false;
            document.getElementById(field).focus();
        }

        function toggleBannerEdit() {
            document.getElementById("banner-form").classList.toggle("hidden-input");
        }
    </script>
    <script>
        document.getElementById("updateProfileForm").addEventListener("submit", async function (event) {
            event.preventDefault();

            // Collect form input values
            const username = document.getElementById("username").value;
            const email = document.getElementById("email").value;
            const password = document.getElementById("password").value;
            const bannerImage = document.getElementById("bannerImage").value;

            try {
                const response = await fetch("/update-profile", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: `Bearer ${localStorage.getItem("token")}` // If JWT token is needed
                    },
                    body: JSON.stringify({
                        username,
                        email,
                        password,
                        bannerImage,
                    }),
                });

                const result = await response.json();

                if (response.ok) {
                    displayMessage("Profile updated successfully.", "success");
                    setTimeout(() => {
                        window.location.href = "/settings";
                    }, 1000);
                } else {
                    displayMessage(result.message || "Failed to update profile.", "error");
                }
            } catch (error) {
                displayMessage("An unexpected error occurred.", "error");
            }
        });

    </script>
    <script>
        function deleteAdmin(adminId) {
            if (confirm("Are you sure you want to delete this admin?")) {
                fetch(`/auth/delete-admin/${adminId}`, {
                    method: "DELETE",
                    headers: {
                        Authorization: `Bearer ${localStorage.getItem("token")}`,
                        "Content-Type": "application/json",
                    },
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.success) {
                            alert("Admin deleted successfully.");
                            location.reload();
                        } else {
                            alert(data.message || "Failed to delete admin.");
                        }
                    })
                    .catch((error) => {
                        console.error("Error:", error);
                        alert("An error occurred.");
                    });
            }
        }

    </script>
    <script>
        function setMain(adminId) {
            if (confirm("Are you sure you want to set this admin as the main admin?")) {
                fetch("/auth/set-admin-main", {
                    method: "PATCH",
                    headers: {
                        Authorization: `Bearer ${localStorage.getItem("token")}`,
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ adminId }),
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.success) {
                            alert("Main admin updated successfully.");
                            location.reload(); // Refresh the page to reflect the changes
                        } else {
                            alert(data.message || "Failed to set main admin.");
                        }
                    })
                    .catch((error) => {
                        console.error("Error:", error);
                        alert("An error occurred.");
                    });
            }
        }

    </script>
    <script>
        document.getElementById("createCouponForm").addEventListener("submit", async function (event) {
            event.preventDefault();

            const code = document.getElementById("couponCode").value;
            const validUntil = document.getElementById("validUntil").value;
            const discountPercentage = document.getElementById("discountPercentage").value;

            // Client-side validation
            if (discountPercentage < 1 || discountPercentage > 100 || isNaN(discountPercentage)) {
                alert("Discount percentage must be a number between 1 and 100.");
                return;
            }

            try {
                const response = await fetch("/order/create-coupon", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ code, validUntil, discountPercentage })
                });

                const result = await response.json();

                if (response.ok) {
                    alert("Coupon created successfully.");
                    location.reload();
                } else {
                    alert(result.message || "Failed to create coupon.");
                }
            } catch (error) {
                console.error("Error:", error);
                alert("An unexpected error occurred.");
            }
        });

        function deleteCoupon(couponId) {
            if (confirm("Are you sure you want to delete this coupon?")) {
                fetch(`/order/delete-coupon/${couponId}`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert("Coupon deleted successfully.");
                            location.reload();
                        } else {
                            alert(data.message || "Failed to delete coupon.");
                        }
                    })
                    .catch(error => {
                        console.error("Error:", error);
                        alert("An error occurred.");
                    });
            }
        }

    </script>


</body>

</html>